✅ Week 3：用户信息管理 + 任务系统初步搭建

🎯 目标：实现用户信息维护功能，搭建任务（Task）模块的增删改查基础功能。
🗓 日常任务分解：
🔹 Day 1：用户信息维护（后端）

为 User 实体添加额外字段（如：nickname, avatar, email 等）

增加 /api/users/me 获取当前用户详细信息接口

增加 /api/users/update 修改当前用户信息接口（PUT / PATCH）

    对接口加上权限拦截，确保用户只能修改自己的信息

🔹 Day 2：用户信息维护（前端）

创建 Profile.vue 页面（展示当前用户信息 + 可编辑）

通过 token 获取 /api/users/me 数据并展示

    实现表单提交更新用户信息（昵称 / 邮箱等, upload avartar image）

🔹 Day 3：任务模型设计（后端）

设计 Task 实体（字段：id, title, description, status, assignee_id, creator_id, create_time, update_time）

创建 TaskRepository, TaskService, TaskController

实现基础增删查改接口（Create, Read, Update, Delete）

    支持分页查询所有任务（可按状态筛选）

🔹 Day 4–5：任务模块（前端）

创建 TaskList.vue 页面（展示所有任务）

创建 TaskForm.vue 页面（创建/编辑任务）

实现任务增删改查功能（使用 Axios 调用后端 API）

    使用 v-for 渲染任务列表，展示 title, status, assignee

🔹 Day 6：状态切换 + 看板视图准备

支持任务状态的切换（To Do → Doing → Done）

前端尝试实现看板样式布局（简单的列 + 拖拽可稍后实现）

    状态颜色区分，增强视觉清晰度

🔹 Day 7：总结 & 推送

整理代码，推送 GitHub（分支名：feature/task 或 week3）

编写本周日志（README 或博客）

    完成的功能

    遇到的问题 & 学习记录

    下周目标展望（如看板拖拽、任务评论、标签系统）